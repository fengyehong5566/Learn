1、Linux启动大致过程？
  1）POST：通电自检
  2）BIOS:BOIS自检，加载硬盘
  3）读取MBR，进行MBR引导
  4）grub引导菜单
  5）加载内核 Kernel（ramdisk)
  6）启动init进程，依据inittab文件设定运行级别
  7）init进程，执行rc.sysinit文件
  8）启动内核模块，执行不同级别的脚本程序
  9）执行/etc/rc.d/rc.local
  10）启动mingetty，进入系统登陆界面
  
  
2、apache有几种工作模式，分别简述两种工作模式及其优缺点？
  apache主要有两种工作模式：prefork(apache的默认安装模式)和worker(可以在编译的时候添加–with-mpm=worker选项)
  prefork的特点是：
    1.这种模式可以不必在请求到来时再产生新的进程，从而减小了系统开销
    2.可以防止意外的内存泄漏
    3.在服务器负载下降的时候会自动减少子进程数
  
  worker的特点是：支持混合的多线程多进程的多路处理模块
  如果对于一个高流量的HTTP服务器，worker MPM是一个比较好的选择，因为worker MPM占用的内存要比prefork要小。
  
  
3、LVS三种模式的工作过程？
  NAT (Network Address Translation)模式。LB收到用户请求包后，LB将请求包中虚拟服务器的IP地址转换为某个选定RS的IP地址，转发给RS；RS将应答包发给 LB，LB将应答包中RS的IP转为虚拟服务器的IP地址，回送给用户。
  
  IP隧道 (IP Tunneling)模式。LB收到用户请求包后，根据IP隧道协议封装该包，然后传给某个选定的RS；RS解出请求信息，直接将应答内容传给用户。此时要求RS和LB都要支持IP隧道协议。
  
  DR(Direct Routing)模式。LB收到请求包后，将请求包中目标MAC地址转换为某个选定RS的MAC地址后将包转发出去，RS收到请求包后 ,可直接将应答内容传给用户。此时要求LB和所有RS都必须在一个物理段内,且LB与RS群共享一个虚拟IP。
  
  
4、简述/etc/fstab里面个字段的含义？
  因为mount挂载在重启服务器后会失效，所以需要将分区信息写到/etc/fstab文件中让它永久挂载：
    磁盘分区  <mount point> <type>   <options> <dump> <pass>
    /dev/sdb1  /mnt/david  ext4     defaults     0     0
  
  <dump>: 此处为1的话，表示要将整个<fie sysytem>里的内容备份；为0的话，表示不备份。现在很少用到dump这个工具，在这里一般选0。
  <pass>: 指定如何使用fsck来检查硬盘。
          a、如果这里填0，则不检查；
          b、挂载点为 / 的（即根分区），必须在这里填写1，其他的都不能填写1。
          c、如果有分区填写大于1的话，则在检查完根分区后，接着按填写的数字从小到大依次检查下去。
             相同数字的同时检查。比如第一和第二个分区填写2，第三和第四个分区填写3，则系统在检查完根分区后，接着同时检查第一和第二个分区，然后再同时检查第三和第四个 分区。
  

5、Apache设置虚拟目录的字段？

  NameVirtualHost 192.168.1.2 //设置域名虚拟主机使用的IP地址
  <VirtualHost 192.168.1.2:80> //建立在地址上的虚拟主机区域
  ServerName www.sfzhang.com //虚拟主页说使用的域名
  DocumentRoot /data/vhosts/sfzhang //建立虚拟主机所使用的文档根目录

6、一个EXT3的文件分区，当用touch新建文件时报错，错误信息是磁盘已满，但是使用df -H查看分区信息时只使用了50%，请分析具体原因？

  答：两种情况，一种是磁盘配额问题（quota），另外一种就是EXT3文件系统的设计不适合很多小文件跟大文件的一种文件格式，出现很多小文件时，容易导致inode耗尽了。

7、请使用Linux系统命令统计出establish状态的连接数有多少?

  netstat -anput  |grep ESTABLISHED |wc -l

8、mysql数据库的备份还原是怎么做的？

  答：平时采用两种方法来做：
    1）利用mysql自带的使用工具mysqldump和mysql来备份还原数据库
    2）利用第三方的mysql管理工具比如：mysqladmin
    3）停止mysqld服务拷贝数据文件

9、Linux系统是由那些部分组成？
  Linux系统内核，shell，文件系统和应用程序四部分组成。  
  
10、查看本机正在监控的端口  
  netstat -anptu | grep  -i "listen"
  
11、统计服务器上各个状态（ESTABLISHED/SYN_SENT/SYN_RECV等）的个数
  netstat  -anpt | awk '{print $NF}' |  sort  -r | uniq -c
  
12、统计web日志access.log文件中出现次数排名前十的ip和次数
  日志格式：
    122.226.185.90 - - [06/Feb/2018:22:56:17 +0800] "GET / HTTP/1.1" 400 173 "-" "-"
  答： awk '{i=$1;count[i]++} END{for (i in count)print(i,count[i])}'  access.log

13、查找/usr/local/apache/logs 目录下最后修改时间大于30天的文件，并删除。
  find /usr/loca/apache/logs/   -type f -mtime +30  -exec rm -f {} \;
  
14、添加一条到192.168.10.0/24的路由，网关为192.168.1.254
  route add -net 192.168.10.0/24 gw 192.168.1.254
  or   route add -net 192.168.10.0 netmark 255.255.255.0 gw 192.168.1.254

15、 利用sed命令把file.txt中所有的换行换成空格
  sed ":a;N;s/\n//g;ta" file
  或者     sed ":a;N;s/\n//g;ba" file
  
  详解：https://blog.csdn.net/fengyuanye/article/details/87912630
  
16、匹配文件中的ip地址
  grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"  1.txt   //不十分准确  匹配范围： 0.0.0.0  -->  999.999.999.999
  grep -E -o '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)' 1.txt    //精确匹配  匹配范围： 0.0.0.0  -->  255.255.255
    优化上调命令：  grep -E -o '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.\1\.\1\.\1' 1.txt
  
17、dmesg 命令中出现 ip_conntrack: table full, dropping packet, 如何解决
    a、sysctl -w net.nf_conntrack_max=100000
    b、在 /etc/sysctl.conf 中加入：
        net.nf_conntrack_max = 100000
    c、使其生效
        sysctl -p
     
18、将本地80端口转发到本地的8888端口，本地ip：192.168.10.10
    iptables -t nat  -A PREROUTING -p tcp --dport 80  -j DNAT --to-destination 127.0.0.1:8888
  
  注：iptables 含 四表五链:
      四表：[raw --> mangle --> nat --> filter ] (-->表示访问的先后顺序)
      五链：PREROUTING  ----->O  ---> forword  --->   POSTROUTING    
                             |                      ^
                             v                      |
                           INPUT                   OUTPUT
                             |                      ^
                             v --->  localhost ---> |
      在prorouting中会访问[raw、mangle、nat]
      在input中会访问[mangle、filter]
      在forword中会访问[mangle、filter]
      在output中会访问[raw、mangle、nat、filter]
      在postrouting中会访问[mangle、nat]
  
19、什么是DDoS攻击，怎么应对DDoS攻击？
    a、从DDoS的危害性和攻击行为来看，我们可以将DDoS攻击方式分为以下几类：
      a）资源消耗类攻击
          资源消耗类是比较典型的DDoS攻击，最具代表性的包括：Syn Flood、Ack Flood、UDP Flood。\
            这类攻击的目标很简单，就是通过大量请求消耗正常的带宽和协议栈处理资源的能力，从而达到服务端无法正常工作的目的。
      
      b）服务消耗性攻击
          相比资源消耗类攻击，服务消耗类攻击不需要太大的流量，它主要是针对服务的特点进行精确定点打击，如web的CC， \
             数据服务的检索，文件服务的下载等。这类攻击往往不是为了拥塞流量通道或协议处理通道，它们是让服务端始终处 \
             理高消耗型的业务的忙碌状态，进而无法对正常业务进行响应，详细示意图如下：

      c）反射类攻击
          反射攻击也叫放大攻击，该类攻击以UDP协议为主，一般请求回应的流量远远大于请求本身流量的大小。攻击者通过流量  \
             被放大的特点以较小的流量带宽就可以制造出大规模的流量源，从而对目标发起攻击。反射类攻击严格意义上来说不算是 \ 
             攻击的一种，它只是利用某些服务的业务特征来实现用更小的代价发动Flood攻击，

      d）混合型攻击
          混合型攻击是结合上述几种攻击类型，并在攻击过程中进行探测选择最佳的攻击方式。混合型攻击往往伴随这资源消耗和服务消耗两种攻击类型特征。

    b、DDoS的防护系统本质上是一个基于资源较量和规则过滤的智能化系统，主要的防御手段和策略包括：
      a）资源隔离
          资源隔离可以看作是用户服务的一堵防护盾，这套防护系统拥有无比强大的数据和流量处理能力，为用户过滤异常的流量和 \ 
            请求。如：针对Syn Flood，防护盾会响应Syn Cookie或Syn Reset认证，通过对数据源的认证，过滤伪造源数据包或发功  \ 
            攻击的攻击，保护服务端不受恶意连接的侵蚀。资源隔离系统主要针对ISO模型的第三层和第四层进行防护。

      b）用户规则
        从服务的角度来说DDoS防护本质上是一场以用户为主体依赖抗D防护系统与黑客进行较量的战争，在整个数据对抗的过程中服务提供者 \ 
          往往具有绝对的主动权，用户可以基于抗D系统特定的规则，如：流量类型、请求频率、数据包特征、正常业务之间的延时间隔等。基于 \
          这些规则用户可以在满足正常服务本身的前提下更好地对抗七层类的DDoS，并减少服务端的资源开销。

      c）大数据智能分析
        黑客为了构造大量的数据流，往往需要通过特定的工具来构造请求数据，这些数据包不具有正常用户的一些行为和特征。为了对抗这种攻  \ 
          击，可以基于对海量数据进行分析，进而对合法用户进行模型化，并利用这些指纹特征，如：Http模型特征、数据来源、请求源等，有效  \
          地对请求源进行白名单过滤，从而实现对DDoS流量的精确清洗。

      d）资源对抗
          资源对抗也叫“死扛”，即通过大量服务器和带宽资源的堆砌达到从容应对DDoS流量的效果

20、什么是cc攻击？怎么预防？
  C 攻击，主要是用来攻击页面的，模拟多个用户不停的对你的页面进行访问，从而使你的系统资源消耗殆尽。
  
  防 CC、DDOS 攻击，这些只能是用硬件防火墙做流量清洗，将攻击流量引入黑洞。
  流量清洗这一块，主要是买 ISP 服务商的防攻击的服务就可以，机房一般有空余流量，我们一般是买服务，毕竟攻击不会是持续长时间。




