看过一些博客，写的比较形象具体。

　◇ 普通的介绍信

　　想必大伙儿都听说过介绍信的例子吧？假设 A 公司的张三先生要到 B 公司去拜访，但是 B 公司的所有人都不认识他，他咋办捏？常用的办法是带公司开的一张介绍信，在信中说：兹有张三先生前往贵公司办理业务，请给予接洽......云云。然后在信上敲上A公司的公章。

　　张三先生到了 B 公司后，把介绍信递给 B 公司的前台李四小姐。李小姐一看介绍信上有 A 公司的公章，而且 A 公司是经常和 B 公司有业务往来的，这位李小姐就相信张先生不是歹人了。

这里，A公司就是CA证书

◇ 引入中介机构的介绍信

　　好，回到刚才的话题。如果和 B 公司有业务往来的公司很多，每个公司的公章都不同，那前台就要懂得分辨各种公章，非常滴麻烦。所以，有某个中介公司 C，发现了这个商机。C公司专门开设了一项“代理公章”的业务。

　　今后，A 公司的业务员去 B 公司，需要带2个介绍信：

　　介绍信1

　　含有 C 公司的公章及 A 公司的公章。并且特地注明：C 公司信任 A 公司。

　　介绍信2

　　仅含有 A 公司的公章，然后写上：兹有张三先生前往贵公司办理业务，请给予接洽......云云。

　　某些不开窍的同学会问了，这样不是增加麻烦了吗？有啥好处捏？

　　主要的好处在于，对于接待公司的前台，就不需要记住各个公司的公章分别是啥样子的；他/她只要记住中介公司 C 的公章即可。当他/她拿到两份介绍信之后，先对介绍信1的 C 公章，验明正身；确认无误之后，再比对介绍信1和介绍信2的两个 A 公章是否一致。如果是一样的，那就可以证明介绍信2是可以信任的了。






什么是证书？
	“证书”洋文也叫“digital certificate”或“public key certificate”
	通俗地说，证书就好比例子里面的公章。通过公章，可以证明该介绍信确实是对应的公司发出的。
	
什么是CA？
	CA是Certificate Authority的缩写，也叫“证书授权中心”。
	它是负责管理和签发证书的第三方机构，就好比例子里面的中介——C 公司。它必须具有足够的权威性。就好比A、B两公司都必须信任C公司，才会找 C 公司作为公章的中介。

什么是CA证书？
	就是CA颁发的证书

证书的签发过程：
	1、提供服务方S 向第三方CA机构 提供 公钥、组织信息、个人信息(域名)等信息并申请认证；
	2、CA通过多种手段验证申请者的信息有效性；
	3、如果信息审核通过，CA机构会向申请者签发认证文件——CA证书
		CA证书里包含：
			a: 申请者公钥
			b: 申请者组织信息和个人信息
			c: CA机构的信息
			d: 有效时间
			e: 证书序列号
		等信息的明文。
		还包含一个签名，
			签名的生产算法：
				首先，使用散列表函数计算公开的明文信息的信息摘要；
				然后，采用CA机构的私钥对信息摘要进行加密，密文即签名；
	4、客户端C 向服务器S 发出请求时，S返回证书文件；
	5、 首先，客户端C读取证书中的相关的明文信息，采用相同的散列函数计算得到信息摘要；
		然后，利用对应CA的公钥解密签名数据，对比证书的信息摘要，如果一致，则可以确认证书的合法性，即公钥合法；
	6、客户端然后验证证书相关的域名、有效时间等信息；
	7、客户端会内置信任的CA机构的证书信息（包含公钥），如果CA不被信任，则找不到对应的CA的证书，证书也会判定非法。

注意：
	a: 申请证书不需要提供私钥，确保私钥永远只能服务器掌握
	b: 证书的合法性仍然依赖于非对称加密算法，证书主要是增加了服务器信息以及签名；
	c: 内置 CA 对应的证书称为根证书，颁发者和使用者相同，自己为自己签名，即自签名证书；
	d: 证书=公钥+申请者与颁发者信息+签名；
	
https连接过程
	https很好的解决了http的三个缺点（被监听、被篡改、被伪装），https不是一种新的协议，它是http+SSL(TLS)的结合体，SSL是一种独立协议，所以其它协议比如smtp等也可以跟ssl结合。https改变了通信方式，它由以前的http—–>tcp，改为http——>SSL—–>tcp；https采用了共享密钥加密+公开密钥加密的方式
	1、客户端发送请求到服务器端
	2、服务器端返回证书和公开密钥，公开密钥作为证书的一部分而存在
	3、客户端验证证书和公开密钥的有效性，如果有效，则生成共享密钥并使用公开密钥加密发送到服务器端
	4、服务器端使用私有密钥解密数据，并使用收到的共享密钥加密数据，发送到客户端
	5、客户端使用共享密钥解密数据
	6、SSL加密建立………



使用cfssl创建证书：
>  cat  ca-csr.json
{
  "CN": "kubernetes",
  "key": {
      "algo": "rsa",
      "size": 2048
  },
  "names": [
    {
      "C": "CN",
      "ST": "Beijing",
      "L": "Beijing",
      "O": "k8s",
      "OU": "system"
    }
  ],
  "ca": {
          "expiry": "87600h"
  }
}

注：
	CN （Common Name）: 代表证书的签署机构,浏览器使用该字段验证网站是否合法，一般写的是域名。非常重要。
	hosts : 是证书应对其有效的域名的列表
	key : 使用的算法\ 长度

	C （Country）：国家
	L （Locality）：地区或市镇（例如城市或城镇名称）
	O （Organization Name）：组织
	OU （Organization Unit Name）：组织单位，例如负责拥有密钥的部门；它也可以用于“做生意”（DBS）名称
	ST (State)：州或省


	
