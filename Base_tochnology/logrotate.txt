安装logrotate：
	yum  -y install logrotate


选项：
		-d --debug	打开debug模式，意味着“-v”，在该模式下，不会改变log日志和logrotate状态文件
		-f --force	强制轮询日志。
		-m --mail <command>		告诉logrotate在寄邮件时，使用哪个命令。该命令必须在标准输入上读取信息并寄出,默认使用邮件命令:/bin/mail  -s
				必须两个参数：
					1)、消息的主题
					2)、接受者
		-s --state <statefile>	告诉logrotate使用备用状态文件，如果logrotate作为不同的用户针对各种日志及运行，这是非常有用的，默认状态文件是/var/lib/logrotate.status
		--usage		显示短使用信息
		--？ --help		打印帮助信息
		-v --verbose	打开verbose模式



配置文件是：/etc/logrotate.conf		【一般不需要改动】
	logrotate.conf主要参数如下：
		compress 	通过gzip 压缩转储以后的日志，默认使用gzip进行压缩
		nocompress 	不需要压缩时，用这个参数

		compresscmd	指定使用什么命令进行压缩，默认是gzip
		uncompresscmd	指定使用什么命令解压日志文件，默认是gunzip

		compressext	指定在压缩日志文件上使用哪个扩展（如果启用压缩）。默认情况下是所配置的压缩命令的默认值。
	
		compressoptions	命令行选项可以传递给压缩程序（如果正在使用的话）。 gzip（1）的默认值是“-9”（最大压缩）。

		copytruncate   用于还在打开中的日志文件，把当前日志备份并截断
		nocopytruncate 备份日志文件但是不截断

		create mode owner group 转储文件，使用指定的文件模式创建新的日志文件
		nocreate 				不建立新的日志文件

		delaycompress 	和 compress 一起使用时，转储的日志文件到下一次转储时才压缩
		nodelaycompress 覆盖 delaycompress 选项，转储同时压缩。

		errors address 专储时的错误信息发送到指定的Email 地址

		ifempty		 即使是空文件也转储，这个是 logrotate 的缺省选项。
		notifempty 	 如果是空文件的话，不转储

		mail address 把转储的日志文件发送到指定的E-mail 地址
		nomail 		 转储时不发送日志文件

		olddir directory 转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统
		noolddir 		 转储后的日志文件和当前日志文件放在同一个目录下

		prerotate/endscript	 在转储以前需要执行的命令可以放入这个对，这两个关键字必须单独成行
		postrotate/endscript 在转储以后需要执行的命令可以放入这个对，这两个关键字必须单独成行

		daily 	指定转储周期为每天
		weekly 	指定转储周期为每周
		monthly 指定转储周期为每月

		rotate count 指定日志文件删除之前转储的次数，0 指没有备份，5 指保留5 个备份
		tabootext [+] list 让logrotate 不转储指定扩展名的文件，缺省的扩展名是：.rpm-orig, .rpmsave, v, 和 ~ 
		size size 当日志文件到达指定的大小时才转储，Size 可以指定 bytes (缺省)以及KB (sizek)或者MB (sizem).










添加配置位置：/etc/logrotate.d/目录下
添加配置文件:
如：/etc/logrorate.d/nginx

vim /etc/logrorate.d/nginx
		/var/log/nginx/*log {
				daily
				rotate 10
				missingok
				notifempty
				compress
				sharedscripts
				postrotate
				[ ! -f /var/run/nginx.pid ] || kill -USR1 `cat /var/run/nginx.pid`
				endscript
		}





























copy
Make a copy of the log file, but don't change the original at all. This option can be used, for instance, to make a snapshot of the current log file, or when some other utility needs to truncate or parse the file. When this option is used, the create option will have no effect, as the old log file stays in place.

copytruncate
Truncate the original log file in place after creating a copy, instead of moving the old log file and optionally creating a new one. It can be used when some program cannot be told to close its logfile and thus might continue writing (appending) to the previous log file forever. Note that there is a very small time slice between copying the file and truncating it, so some logging data might be lost. When this option is used, the create option will have no effect, as the old log file stays in place.
create mode owner group
Immediately after rotation (before the postrotate script is run) the log file is created (with the same name as the log file just rotated). mode specifies the mode for the log file in octal (the same as chmod(2)), owner specifies the user name who will own the log file, and group specifies the group the log file will belong to. Any of the log file attributes may be omitted, in which case those attributes for the new file will use the same values as the original log file for the omitted attributes. This option can be disabled using the nocreate option.
daily
Log files are rotated every day.

dateext
Archive old versions of log files adding a daily extension like YYYYMMDD instead of simply adding a number. The extension may be configured using the dateformat option.
dateformat format_string
Specify the extension for dateext using the notation similar to strftime(3) function. Only %Y %m %d and %s specifiers are allowed. The default value is -%Y%m%d. Note that also the character separating log name from the extension is part of the dateformat string. The system clock must be set past Sep 9th 2001 for %s to work correctly. Note that the datestamps generated by this format must be lexically sortable (i.e., first the year, then the month then the day. e.g., 2001/12/01 is ok, but 01/12/2001 is not, since 01/11/2002 would sort lower while it is later). This is because when using the rotate option, logrotate sorts all rotated filenames to find out which logfiles are older and should be removed.
delaycompress
Postpone compression of the previous log file to the next rotation cycle. This only has effect when used in combination with compress. It can be used when some program cannot be told to close its logfile and thus might continue writing to the previous log file for some time.
extension ext
Log files with ext extension can keep it after the rotation. If compression is used, the compression extension (normally .gz) appears after ext. For example you have a logfile named mylog.foo and want to rotate it to mylog.1.foo.gz instead of mylog.foo.1.gz.
ifempty
Rotate the log file even if it is empty, overriding the notifempty option (ifempty is the default).
include file_or_directory
Reads the file given as an argument as if it was included inline where the include directive appears. If a directory is given, most of the files in that directory are read in alphabetic order before processing of the including file continues. The only files which are ignored are files which are not regular files (such as directories and named pipes) and files whose names end with one of the taboo extensions, as specified by the tabooext directive. The include directive may not appear inside a log file definition.
mail address
When a log is rotated out-of-existence, it is mailed to address. If no mail should be generated by a particular log, the nomail directive may be used.
mailfirst
When using the mail command, mail the just-rotated file, instead of the about-to-expire file.
maillast
When using the mail command, mail the about-to-expire file, instead of the just-rotated file (this is the default).
maxage count
Remove rotated logs older than <count> days. The age is only checked if the logfile is to be rotated. The files are mailed to the configured address if maillast and mail are configured.
minsize size
Log files are rotated when they grow bigger than size bytes, but not before the additionally specified time interval (daily, weekly, monthly, or yearly). The related size option is similar except that it is mutually exclusive with the time interval options, and it causes log files to be rotated without regard for the last rotation time. When minsize is used, both the size and timestamp of a log file are considered.
missingok
If the log file is missing, go on to the next one without issuing an error message. See also nomissingok.
monthly
Log files are rotated the first time logrotate is run in a month (this is normally on the first day of the month).
nocompress
Old versions of log files are not compressed. See also compress.
nocopy
Do not copy the original log file and leave it in place. (this overrides the copy option).

nocopytruncate
Do not truncate the original log file in place after creating a copy (this overrides the copytruncate option).
nocreate
New log files are not created (this overrides the create option).
nodelaycompress
Do not postpone compression of the previous log file to the next rotation cycle (this overrides the delaycompress option).
nodateext
Do not archive old versions of log files with date extension (this overrides the dateext option).
nomail
Don't mail old log files to any address.

nomissingok
If a log file does not exist, issue an error. This is the default.
noolddir
Logs are rotated in the same directory the log normally resides in (this overrides the olddir option).
nosharedscripts
Run prerotate and postrotate scripts for every log file which is rotated (this is the default, and overrides the sharedscripts option). The absolute path to the log file is passed as first argument to the script. If the scripts exit with error, the remaining actions will not be executed for the affected log only.
noshred
Do not use shred when deleting old log files. See also shred.
notifempty
Do not rotate the log if it is empty (this overrides the ifempty option).
olddir directory
Logs are moved into directory for rotation. The directory must be on the same physical device as the log file being rotated, and is assumed to be relative to the directory holding the log file unless an absolute path name is specified. When this option is used all old versions of the log end up in directory. This option may be overridden by the noolddir option.
postrotate/endscript
The lines between postrotate and endscript (both of which must appear on lines by themselves) are executed (using /bin/sh) after the log file is rotated. These directives may only appear inside a log file definition. Normally, the absolute path to the log file is passed as first argument to the script. If sharedscripts is specified, whole pattern is passed to the script. See also prerotate. See sharedscripts and nosharedscripts for error handling.
prerotate/endscript
The lines between prerotate and endscript (both of which must appear on lines by themselves) are executed (using /bin/sh) before the log file is rotated and only if the log will actually be rotated. These directives may only appear inside a log file definition. Normally, the absolute path to the log file is passed as first argument to the script. If sharedscripts is specified, whole pattern is passed to the script. See also postrotate. See sharedscripts and nosharedscripts for error handling.
firstaction/endscript
The lines between firstaction and endscript (both of which must appear on lines by themselves) are executed (using /bin/sh) once before all log files that match the wildcarded pattern are rotated, before prerotate script is run and only if at least one log will actually be rotated. These directives may only appear inside a log file definition. Whole pattern is passed to the script as first argument. If the script exits with error, no further processing is done. See also lastaction.
lastaction/endscript
The lines between lastaction and endscript (both of which must appear on lines by themselves) are executed (using /bin/sh) once after all log files that match the wildcarded pattern are rotated, after postrotate script is run and only if at least one log is rotated. These directives may only appear inside a log file definition. Whole pattern is passed to the script as first argument. If the script exits with error, just an error message is shown (as this is the last action). See also firstaction.
rotate count
Log files are rotated count times before being removed or mailed to the address specified in a mail directive. If count is 0, old versions are removed rather than rotated.
size size
Log files are rotated only if they grow bigger then size bytes. If size is followed by k, the size is assumed to be in kilobytes. If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100Gare all valid.
sharedscripts
Normally, prerotate and postrotate scripts are run for each log which is rotated and the absolute path to the log file is passed as first argument to the script. That means a single script may be run multiple times for log file entries which match multiple files (such as the /var/log/news/* example). If sharedscripts is specified, the scripts are only run once, no matter how many logs match the wildcarded pattern, and whole pattern is passed to them. However, if none of the logs in the pattern require rotating, the scripts will not be run at all. If the scripts exit with error, the remaining actions will not be executed for any logs. This option overrides the nosharedscripts option and implies create option.
shred
Delete log files using shred -u instead of unlink(). This should ensure that logs are not readable after their scheduled deletion; this is off by default. See also noshred.

shredcycles count
Asks GNU shred(1) to overwite log files count times before deletion. Without this option, shred's default will be used.
start count
This is the number to use as the base for rotation. For example, if you specify 0, the logs will be created with a .0 extension as they are rotated from the original log files. If you specify 9, log files will be created with a .9, skipping 0-8. Files will still be rotated the number of times specified with the count directive.
tabooext [+] list
The current taboo extension list is changed (see the include directive for information on the taboo extensions). If a + precedes the list of extensions, the current taboo extension list is augmented, otherwise it is replaced. At startup, the taboo extension list contains .rpmorig, .rpmsave, ,v, .swp, .rpmnew, ~, .cfsaved and .rhn-cfg-tmp-*.
weekly
Log files are rotated if the current weekday is less than the weekday of the last rotation or if more than a week has passed since the last rotation. This is normally the same as rotating logs on the first day of the week, but it works better if logrotate is not run every night.

yearly

Log files are rotated if the current year is not the same as the last rotation.

Files

/var/lib/logrotate.status
Default state file.

/etc/logrotate.conf

Configuration options.






https://linux.die.net/man/8/logrotate
