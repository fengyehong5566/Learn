redis ―― remote dictionary server的简称

redis以字典结构存储数据；
	key：是字符串类型，不允许包含空格和换行符

redis支持的键值数据类型：
	字符串类型(string)
	散列类型(hash)
	列表类型(list)
		可以用来实现队列，并且支持阻塞式读取
		可以理解为是一个链表结构，每个子元素都是string类型的双向链表
	集合类型(set)
		无序的集合，最大可以包含(2的32次方 -1 )个元素。通过hash table实现的
	有序集合类型(sorted set)

redis支持持久化，即可以将内存中的数据异步写入到硬盘中，且不影响提供服务。
	1、快照方式(默认)
		就是将内存中数据以快照的方式写入到二进制文件中，默认的文件名为dump.rdb
		可以使用save/bgsave命令通知redis做一次快照持久化。
		save操作食杂主线程中保存快照的，而redis使用一个主线程来处理所有客户请求的，这种方式会阻塞客户请求，所以不推荐使用
		由于快照是在一定间隔时间做一次，所以如果redis意外宕机的话，就会丢失最后一次快照后修改的数据。
	2、日志追加方式
		这种方式redis会将每一个收到的写命令都通过write函数追加到文件中(默认appendonly.aof)。当redis重启时会通过重新执行文件中保存的写命令来在内存中重建整个数据库内容。由于操作系统会在内核中缓存write做的修改，所以可能不是立即写到磁盘上。这样的持久化还是有可能会丢失部分修改。但可以通过配置文件告诉redis我们想要通过fsync函数强制操作系统写入到磁盘的时机。
		有三种方式如下：(默认是每秒fsync一次)
			appendonlyyes //启用日志追加持久化方式
			#appendfsyncalways //每次收到写命令就立即强制写入磁盘，最慢的，但是保证完全的持久化，不推荐使用
			appendfsynceverysec //每秒钟强制写入磁盘一次，在性能和持久化方面做了很好的折中，推荐
			#appendfsyncno //完全依赖操作系统，性能最好,持久化没保证
		问题： 这种方式会造成日志文件越来越大！
			为了解决这个问题，redis提供了bgrewriteaof命令，收到次命令redis将使用与快照类似的方式将内存中的数据以命令的方式保存到临时文件中，最后替换原来的持久胡日志文件
			

redis每个键可以设置生存时间(Time To Live，TTL)，键到期后会自动删除。

redis是单线程模式，memcached支持多线程；

redis亦可作为缓存、队列系统。作为缓存系统，redis可以限定数据占用内存空间的大小，达到限制后会安装一定规则自动淘汰不需要的键

redis默认支持16个数据库，数据库名字是一个从0开始的递增数字命名。
	通过配置参数databases来修改数据库个数
	通过select 命令选择进入那个数据库，默认进入0数据库
	redis不支持自定义数据库名，也不支持每个数据库设置不同的访问密码。


































