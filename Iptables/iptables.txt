                      ##########################################
                      #              CENTOS 6                  #
                      ##########################################

简介：
        iptables [-t table] {-A|-D} chain rule-specification

        iptables [-t table] -I chain [rulenum] rule-specification

        iptables [-t table] -R chain rulenum rule-specification

        iptables [-t table] -D chain rulenum

        iptables [-t table] -S [chain [rulenum]]

        iptables [-t table] {-F|-L|-Z} [chain [rulenum]] [options...]

        iptables [-t table] -N chain

        iptables [-t table] -X [chain]

        iptables [-t table] -P chain target

        iptables [-t table] -E old-chain-name new-chain-name

        rule-specification = [matches...] [target]

        match = -m matchname [per-match-options]

        target = -j targetname [per-target-options]

  *******************************************************************************************
  *      流程                                                                               *
  *                                                                                         *
  *          链流程：                                                                       *
  *                  ————>  PREROUTING  ————>  FORWARD  ————>  POSTROUTING  ————>           *
  *                            |                                  |                         *
  *                            |                                  |                         *
  *                          INPUT                              OUTPUT                      *
  *                            |                                  |                         *
  *                            |                                  |                         *
  *                            +  ————————>   localhost  ————————>+                         *
  *                                                                                         *
  *          表流程：                                                                       *
  *              raw  -->  mangle --> nat --> filter    【遍历顺序】                        *
  *                                                                                         *
  *******************************************************************************************

***************************************************************************
tables：
    -t  [--table]
        raw：PREROUTING/OUTPUT
            主要做连接追踪
        mangle：PREROUNTING/INPUT/FORWARD/OUTPUT/POSTROUTING
            对数据包进行修改，例如给数据包打标记MARK
        nat：   PREROUNTING/OUTPUT/POSTROUNTING      
            主要修改数据包的地址和端口，例如源地址或目标地址
			包含：DNAT（目标地址转换）、SNAT（源地址转换）、MASQUERADE
			（1）DNAT操作主要用在这样一种情况，你有一个合法的IP地址，要把对防火墙的访问 重定向到其他的机子上（比如DMZ）。也就是说，我们改变的是目的地址，以使包能重路由到某台主机。
			（2）SNAT 改变包的源地址，这在极大程度上可以隐藏你的本地网络或者DMZ等。内网到外网的映射。
			（3）MASQUERADE 的作用和SNAT完全一样，只是计算机的负荷稍微多一点。因为对每个匹配的包，MASQUERADE都要查找可用的IP地址，而不象SNAT用的IP地址是配置好的。
        filter： INPUT/FORWARD/OUTPUT
            实现对数据包的过滤

***************************************************************************

targets:
	【ACCEPT, DROP, QUEUE or RETURN】
	
	ACCEPT：允许包通过
	QROP：从底层拒绝包,不做任何操作
	REJECT：REJECT目标与DROP目标基本相同，但是它也向发送阻塞的数据包的主机发回错误消息
	QUEUE：将数据包传递给用户空间 【参见NFQUEUE target】
    RETURN；表示停止遍历这个链，并在前一个(调用)链中的下一个规则处继续。 如果到达内置链的末端，或者目标RETURN的内置链中的规则匹配，则由链策略指定的目标将决定数据包的命运。
            
***************************************************************************

option：
    COMMAND：
       -A  --append      在规则列表的最后增加1条规则
       -D  --delete      从规则列表中删除1条规则
       -I   --insert     在指定的位置插入1条规则，默认插入成第一条
       -R  --replace     替换规则列表中的某条规则
       -L   --list       查看,v详细,n不反解
       -S  --list-rules  显示指定链中的所有规则        
       -F  --flush       删除表中的所有规则
       -Z  --zero        将表中数据包计数器和流量计数器归零
       -N  --new-chain     创建自定义链
       -X  --delete-chain  删除自定义链
       -P  --policy		 设置链的默认目标，即策略。 与链中任何规则都不匹配的信息包将强制使用此命令中指定的策略。
       -E  --rename-chain
       -h

    PARAMETERS：
       [!] -p, --protocol protocol/numeric
             可指定值：tcp,  udp,  udplite,  icmp,  esp, ah, sctp, all
             A protocol name from /etc/protocols is also allowed.  
       [!] -s, --source address[/mask][,...]
              --src 
       [!] -d, --destination address[/mask][,...]
              --dst 
       -j, --jump target       
       -g, --goto chain
       [!] -i, --in-interface name
            INPUT, FORWARD and PREROUTING chains
       [!] -o, --out-interface name
            FORWARD,  OUTPUT and  POSTROUTING  chains                         
       [!] -f, --fragment
            该规则涉及碎片分组和碎片包的进一步碎片，由于无法告知此类分组的源端口或目标端口（或ICMP类型），这样的包将不匹配指定它们的任何规则
            “！” 参数代表这个规则只匹配HEAD碎片或没有破碎的包
        -c, --set-counters packets/bytes
            使管理员能够初始化规则的包和字节计数器（在插入、追加、替换操作期间）
        
    OTHER OPTIONS：
       -v, --verbose
       -n, --numeric    【Numeric  output.  】

       -x, --exact
            显示的数据包和字节计数器的精确值，This option is only relevant for the -L command.

       --line-numbers
            打印链中rule对应rulenumber

       --modprobe=command
            When  adding  or inserting rules into a chain, use command to load any necessary modules (targets, match extensions, etc).
         
***************************************************************************

-j :
    ACCEPT target
        这个目标不需要进一步的选择。 只要一个数据包的匹配规范已经完全满足，并且我们指定ACCEPT作为目标，规则就被接受，并且不会继续遍历当前链或者同一个表中的其他链。 但是请注意，一个链中接受的数据包仍然可以穿过其他表中的链，并且仍然可以在这里丢弃。 这个目标没有什么特别之处，也不需要，也没有可能为目标增加选项。 要使用这个目标，我们只需指定-j ACCEPT。

    CLASSIFY target
    CLUSTERIP target
    CONNMARK target
    CONNSECMARK target
    DNAT target
        DNAT目标被用来做目标网络地址转换，这意味着它被用来重写数据包的目标IP地址。如果数据包匹配，这是规则的目标，则数据包以及同一个数据流中的所有后续数据包将被转换，然后路由到正确的设备，主机或网络。这个目标可以是非常有用的，例如，当你有一个主机在局域网内运行你的网络服务器，但没有真正的IP给它在互联网上工作。然后你可以告诉防火墙将所有的数据包转发到它自己的HTTP端口，然后转发到局域网内的真实网络服务器上。我们也可以指定一个完整的目标IP地址范围，DNAT机制将为每个流随机选择目的IP地址。因此，我们可以通过这样做来处理一种负载平衡。请注意，DNAT目标仅在nat表中的PREROUTING和OUTPUT链中可用，以及从任何列出的链中调用的任何链。请注意，包含DNAT目标的链可能不能用于任何其他链，如POSTROUTING链。
        example:  iptables -t nat -A PREROUTING -p tcp -d 15.45.23.67 --dport 80 -j DNAT --to-destination 192.168.1.1-192.168.1.10
    DROP target
        DROP的目标就是这么做的，它会丢弃数据包，不会执行任何进一步的处理。 完美匹配规则的数据包然后被丢弃将被阻止。 请注意，此操作在某些情况下可能会产生不必要的影响，因为它可能会在任一主机上留下死穴。 在可能的情况下，更好的解决方案是使用REJECT目标，尤其是当您想要阻止端口扫描程序获取太多信息时，例如在过滤的端口上等等。 还要注意的是，如果一个数据包在子链上采取了DROP动作，那么数据包将不会在任何主链中或在任何其他表中被处理。 换句话说，数据包完全死了。 正如我们以前所见，目标不会向任何方向发送任何类型的信息，也不会向路由器等中介发送任何信息。
        
    DSCP target
    ECN target
    LOG target options
    MARK target
        expamle:   iptables -t mangle -A PREROUTING -p tcp --dport 22 -j MARK --set-mark 2

    MASQUERADE target
        MASQUERADE目标与SNAT目标基本相同，但不需要任何“源”选项。原因在于MASQUERADE目标是用于例如拨号连接或DHCP连接，当连接到有问题的网络时获得动态IP地址。这意味着你只应该使用带有动态分配的IP连接的MASQUERADE目标，我们并不知道任何时候的实际地址。如果你有一个静态的IP连接，你应该使用SNAT目标。
        当您伪装一个连接时，这意味着我们设置了在特定网络接口上使用的IP地址，而不是--to-source选项，并且IP地址是从关于特定接口的信息中自动获取的。 MASQUERADE目标还具有当接口关闭时连接被遗忘的效果，例如，如果我们杀死一个特定的接口，这是非常好的。 如果我们使用了SNAT目标，我们可能会留下很多旧的连接跟踪数据，这些数据会被搁置几天，吞噬有用的连接跟踪内存。 一般而言，这是处理拨号线路时的正确行为，每次拨出线路时可能会分配一个不同的IP。 如果我们被分配了不同的IP地址，那么连接就会丢失，而且保持输入的状态或多或少是愚蠢的。
        即使你有一个静态IP，仍然可以使用MASQUERADE目标而不是SNAT，但是这样做不好，因为它会增加额外的开销，并且在未来可能会有不一致的情况，从而阻碍你现有的脚本和呈现 他们“无法使用”。
        请注意，MASQUERADE目标仅在nat表的POSTROUTING链中有效，就像SNAT目标一样。 MASQUERADE目标需要下面指定的一个选项，这是可选的。
        example:     iptables -t nat -A POSTROUTING -p TCP -j MASQUERADE --to-ports 1024-31000

    MIRROR target
    NETMAP target
    NFQUEUE target
    NOTRACK target
    QUEUE target
    REDIRECT target
    REJECT target
        REJECT目标与DROP目标基本相同，但是它也向发送阻塞的数据包的主机发回错误消息。 目前REJECT目标仅在INPUT，FORWARD和OUTPUT链或其子链上有效。 毕竟，这些将成为唯一一个把这个目标放在一个有意义的链条上。 请注意，所有使用REJECT目标的链只能通过INPUT，FORWARD和OUTPUT链调用，否则它们将不起作用。 目前只有一个选项可以控制这个目标的工作性质，尽管这可能会带来一大堆变量。 如果你有一个TCP / IP的基本知识，他们大多是相当容易理解的。
        example:   iptables -A FORWARD -p TCP --dport 22 -j REJECT --reject-with tcp-reset

    RETURN target
        返回目标将导致当前数据包停止通过链条到达规则。 如果是另外一个链条的子链，那么这个数据包将继续穿过上级链，就好像什么也没发生过一样。 如果链是主链，例如INPUT链，则数据包将具有默认策略。 默认策略通常设置为ACCEPT，DROP或类似的。 例如，假设一个数据包进入INPUT链，然后碰到一个匹配的规则，并将其告知 - 跳转到EXAMPLE_CHAIN。 然后数据包将开始遍历EXAMPLE_CHAIN，并突然匹配一个具有--jump RETURN目标集的特定规则。 然后它将跳回到INPUT链。 另一个例子是，如果数据包在INPUT链中碰到了一个--jump RETURN规则。 然后它将被放弃到前面描述的默认策略，并且不会在这个链中采取更多的行动。

    SAME target
    SECMARK target
    SNAT target
        SNAT目标被用来做源网络地址转换，这意味着这个目标将重写数据包的IP头中的源IP地址。这就是我们想要的，例如，当几个主机必须共享一个Internet连接。然后，我们可以在内核中打开ip转发，并编写一个SNAT规则，将所有从本地网络传出的数据包转换为我们自己Internet连接的源IP。如果不这样做，外面的世界将不知道在哪里发送回复数据包，因为我们的本地网络大多使用分配给LAN网络的IANA指定的IP地址。如果我们按原样转发这些数据包，互联网上的任何人都不会知道他们确实来自我们。 SNAT目标完成所有需要做这种工作的翻译，让所有的数据包离开我们的局域网，看起来好像他们来自单个主机，这将是我们的防火墙。 SNAT目标仅在POSTROUTING链内的nat表内有效。换句话说，这是您可以使用SNAT的唯一链条。只有连接中的第一个数据包被SNAT破坏，之后所有使用相同连接的数据包也将被SNATted。此外，POSTROUTING链中的初始规则将应用于同一个流中的所有数据包。
        example:  iptables -t nat -A POSTROUTING -p tcp -o eth0 -j SNAT --to-source 194.236.50.155-194.236.50.160:1024-32000

    TCPMSS target
    TOS target
    TTL target
    ULOG target

====================================
-m :
    Addrtype match
    AH/ESP match
    Comment match
    Connmark match
    Conntrack match
    Dscp match
    Ecn match
    Hashlimit match
    Helper match
    IP range match
    Length match
    Limit match
        限制匹配扩展必须使用-m限制选项显式加载。例如，可以使用此匹配来限制特定规则的记录等。例如，可以使用此匹配所有不超过给定值的数据包，并且超过此值后，限制记录日志有问题的事件。考虑时间限制：您可以限制某个规则在特定时间范围内可以匹配的次数，例如，以减少DoS syn flood攻击的影响。这是它的主要用法，当然还有更多的用法。限制匹配也可以通过添加一个！在极限比赛前的旗帜。它会被表示为-m限制！ - limit 5 / s。这意味着所有的数据包都会在打破限制后进行匹配。
        为了进一步解释极限匹配，它基本上是一个令牌桶过滤器。考虑有一个漏桶，每个时间单元泄漏X个数据包。 X取决于我们得到的匹配数据包的数量，所以如果我们得到3个数据包，那么每个时间单元的数据包就会泄露3个数据包。 --limit选项告诉我们每个时间单位有多少个数据包来重新装满数据包，而--limit-burst选项告诉我们数据包有多大。所以，设置 - 限制3分钟 - 限制突发5，然后接收5场比赛将清空桶。 20秒之后，水桶被重新填充另一个标记，依此类推，直到再次到达 - 极限突发或者直到它们被使用。
        考虑下面的例子来进一步解释这可能看起来如何。
            1，我们用-m limit - limit 5 / second --limit-burst 10 / second来设置规则。极限突发令牌桶初始设置为10。每个匹配规则的数据包使用一个令牌。
            2，我们得到匹配的数据包，1-2-3-4-5-6-7-8-9-10，都在1/1000秒内。
            3，令牌桶现在是空的。一旦令牌桶为空，那么符合规则的数据包就不再符合规则，并进入下一个规则（如果有的话），或命中链策略。
            4，每1/5秒没有匹配的数据包，令牌数量增加1，最多10个数据包在收到10个数据包之后，我们将再次剩下5个令牌。
            5，当然，对于接收到的每个数据包，桶将被清空1个令牌。
        --limit
            example:    iptables -A INPUT -m limit --limit 3/hour
        --limit-burst
            example:    iptables -A INPUT -m limit --limit-burst 5

    Mac match
    Mark match
    Multiport match
        --source-ports,--sports
        --destination-ports,--dports
        --ports
    Owner match
    Packet type match
    Realm match
    Recent match
    State match
        --state, state是要匹配的连接状态的逗号分隔列表。
            INVALID: 意味着由于某些原因无法识别数据包，包括内存不足和与任何已知连接不对应的ICMP错误
            ESTABLISHED: 意味着由于某些原因无法识别数据包，包括内存不足和与任何已知连接不对应的ICMP错误
            NEW: 意味着由于某些原因无法识别数据包，包括内存不足和与任何已知连接不对应的ICMP错误
            RELATED: 表示数据包正在启动新连接，但与现有连接相关联
    Tcpmss match
    Tos match
    Ttl match
    Unclean match

***************************************************************************

MATCH EXTENSIONS 【扩展匹配】
   	iptables 可以使用匹配模块的扩展包
    有两种加载方式：
        -p or --protocol指定，
        -m or --match 选项，后跟匹配模块的名字，在一行里可以指定多行匹配模块，
    可以在模块名后面使用-h or --help 选项获取该模块的帮助
      
	addrtype
       [!] -i, --in-interface name
            INPUT, FORWARD and PREROUTING chains
       [!] -o, --out-interface name
            FORWARD,  OUTPUT and  POSTROUTING  chains                         
       [!] -f, --fragment
            该规则涉及碎片分组和碎片包的进一步碎片，由于无法告知此类分组的源端口或目标端口（或ICMP类型），这样的包将不匹配指定它们的任何规则
            “！” 参数代表这个规则只匹配HEAD碎片或没有破碎的包
        -c, --set-counters packets/bytes
            使管理员能够初始化规则的包和字节计数器（在插入、追加、替换操作期间）
        
    OTHER OPTIONS：
       -v, --verbose
       -n, --numeric    【Numeric  output.  】

       -x, --exact
            显示的数据包和字节计数器的精确值，This option is only relevant for the -L command.

       --line-numbers
            打印链中rule对应rulenumber

       --modprobe=command
            When  adding  or inserting rules into a chain, use command to load any necessary modules (targets, match extensions, etc).
         
***************************************************************************

MATCH EXTENSIONS 【扩展匹配】
   	iptables 可以使用匹配模块的扩展包
    有两种加载方式：
        -p or --protocol指定，
        -m or --match 选项，后跟匹配模块的名字，在一行里可以指定多行匹配模块，
    可以在模块名后面使用-h or --help 选项获取该模块的帮助
      
	addrtype
       [!] -i, --in-interface name
            INPUT, FORWARD and PREROUTING chains
       [!] -o, --out-interface name
            FORWARD,  OUTPUT and  POSTROUTING  chains                         
       [!] -f, --fragment
            该规则涉及碎片分组和碎片包的进一步碎片，由于无法告知此类分组的源端口或目标端口（或ICMP类型），这样的包将不匹配指定它们的任何规则
            “！” 参数代表这个规则只匹配HEAD碎片或没有破碎的包
        -c, --set-counters packets/bytes
            使管理员能够初始化规则的包和字节计数器（在插入、追加、替换操作期间）
        
    OTHER OPTIONS：
       -v, --verbose
       -n, --numeric    【Numeric  output.  】

       -x, --exact
            显示的数据包和字节计数器的精确值，This option is only relevant for the -L command.

       --line-numbers
            打印链中rule对应rulenumber

       --modprobe=command
            When  adding  or inserting rules into a chain, use command to load any necessary modules (targets, match extensions, etc).
         
***************************************************************************

MATCH EXTENSIONS 【扩展匹配】
   	iptables 可以使用匹配模块的扩展包
    有两种加载方式：
        -p or --protocol指定，
        -m or --match 选项，后跟匹配模块的名字，在一行里可以指定多行匹配模块，
    可以在模块名后面使用-h or --help 选项获取该模块的帮助
      
	addrtype
       [!] -i, --in-interface name
            INPUT, FORWARD and PREROUTING chains
       [!] -o, --out-interface name
            FORWARD,  OUTPUT and  POSTROUTING  chains                         
       [!] -f, --fragment
            该规则涉及碎片分组和碎片包的进一步碎片，由于无法告知此类分组的源端口或目标端口（或ICMP类型），这样的包将不匹配指定它们的任何规则
            “！” 参数代表这个规则只匹配HEAD碎片或没有破碎的包
        -c, --set-counters packets/bytes
            使管理员能够初始化规则的包和字节计数器（在插入、追加、替换操作期间）
        
    OTHER OPTIONS：
       -v, --verbose
       -n, --numeric    【Numeric  output.  】

       -x, --exact
            显示的数据包和字节计数器的精确值，This option is only relevant for the -L command.

       --line-numbers
            打印链中rule对应rulenumber

       --modprobe=command
            When  adding  or inserting rules into a chain, use command to load any necessary modules (targets, match extensions, etc).
         
***************************************************************************

MATCH EXTENSIONS 【扩展匹配】
   	iptables 可以使用匹配模块的扩展包
    有两种加载方式：
        -p or --protocol指定，
        -m or --match 选项，后跟匹配模块的名字，在一行里可以指定多行匹配模块，
    可以在模块名后面使用-h or --help 选项获取该模块的帮助
      
	addrtype
    	这个模块是基于ip地址类型进行匹配，地址类似在内核网络堆栈中使用，并将地址分配到不同的组中。组的准确定义依赖于特定的三层协议
        Address type match options:
             [!] --src-type type[,...]      Match source address type   【在PREROUTING、INPUT、FORWARD 生效】
             [!] --dst-type type[,...]      Match destination address type   【在POSTROUTING、OUTPUT、RORWARD生效】
             --limit-iface-in           Match only on the packet's incoming device
             --limit-iface-out          Match only on the packet's incoming device

        Valid types:           
            UNSPEC：不指定地址
            UNICAST：单播
            LOCAL：本地
            BROADCAST：广播
            ANYCAST：任播
            MULTICAST：多路广播
            BLACKHOLE： a blackhole address
            UNREACHABLE：不能达到的
            PROHIBIT：阻止、禁止
            THROW  [FIXME]：投、抛  
            NAT  [FIXME]：
            XRESOLVE：

    ah
        这个模块用于匹配IPsec包中的鉴别头的SPIs
        [!] --ahspi spi[:spi]
    
    cluster
        允许在不部署负载均衡的情况下，配置网关和后端负载共享
        这个匹配要求所有的节点能看到相同的包，因此，集群匹配决定是否这个节点是否必须处理给定的包根据下面的选项：
        --cluster-total-nodes     num        设置为集群全部节点的数量
        [!] --cluster-local-node   num       设置本地节点的number ID
            只有在给定的时间内匹配，必须在ISO 8601“T”表示法中。可能的时间范围是1970 -01- 01T00:00到2038 -01- 19T04:17:07。
            如果没有指定--datestart或--datestop，将分别默认为1970-01-01和2038-01-19

        --timestart hh:mm[:ss]
        --timestop hh:mm[:ss]
            只匹配给定时间内的。可能的时间范围是00:00:00到23:59:59。允许前导零（例. “06:03”）并正确地解释为base-10。

        [!] --monthdays day[,day...]
            只匹配给定的天数内的，可能的值是1—31，注意特别的，当没有31天的月，不进行匹配第31天，同样的情况也会发生在28天或29天的二月。

        [!] --weekdays day[,day...]
            仅在给定的周中匹配，可能值分别为：Mon, Tue, Wed, Thu, Fri, Sat, Sun, 或者 1 to 7, 也可以使用2个字符的变体（Mo, Tu, etc...）

        --utc
            说明“--datestart,--datestop,--timestart,--timestop”是UTC时间

        --localtz
            说明“--datestart,--datestop,--timestart,--timestop”是本地内核时间【默认】

        EXAMPLES：
            To match on weekends, use:
                -m time --weekdays Sa,Su
            To match (once) on a national holiday block:
                -m time --datestart 2007-12-24 --datestop 2007-12-27
            因为通常包含停止时间，可以根据下面的方式避免匹配新一天的第一秒：
                -m time --datestart 2007-01-01T17:00 --datestop 2007-01-01T23:59:59
            During lunch hour:
                -m time --timestart 12:30 --timestop 13:30
            The fourth Friday in the month:
                -m time --weekdays Fr --monthdays 22,23,24,25,26,27,28

    policy
        此模块匹配IPSec用于处理数据包的策略。
        --dir {in|out}  
            用于选择是否匹配解包/打包的策略
            in：在PREROUTING、INPUT、FORWARD链中有效
            out：在POSTROUTING、OUTPUT、FORWARD链中生效
        --pol {none|ipsec}
            如果数据包受到IPSec处理，则匹配。
        --strict 
            选择是否匹配给出的精确策略，或如果给出任何规则策略，则匹配
        [!] --reqid id
            匹配策略规则的reqid。 可以使用unique：id作为级别使用setkey（8）指定reqid。
        [!] --spi spi
        [!] --proto {ah|esp|ipcomp}
            匹配的封装协议
        [!] --mode {tunnel|transport}
            匹配的封装模式
        [!] --tunnel-src addr[/mask]
            匹配隧道模式SA的源端点地址。【仅和“--mode tunnel”一起有效】
        [!] --tunnel-dst addr[/mask]
            匹配隧道模式SA的目的端点地址。【仅和“--mode tunnel”一起有效】
        --next 
            开始策略规范中的下一个规则。【仅用于“--strict”选项 】

    其他模块：
             connbytes、connlimit、connmark、dccp、dscp、ecn、esp、hashlimit、helper、iprange、length、limit、mac、mark、multiport、owner、phtsdev、pkttype、policy、quota、rateest、realm、recent、sctp、set、socket、statistic、string、tcpmss、tos、ttl、u32、udp、unclean

***************************************************************************

TARGET EXTENSIONS【目标扩展】
    iptables可扩展目标模块：以下以纳入在标准分布

    AUDIT
        此目标允许创建用于命中目标的包的审计记录。它可以用来记录接收、删除和拒绝包。详情请参阅auditd(8)。
        --type {accept|drop|reject}  设置审计记录类型
        Example:
            iptables -N AUDIT_DROP
            iptables -A AUDIT_DROP -j AUDIT --type drop
            iptables -A AUDIT_DROP -j DROP

    CHECKSUM
        这个目标允许有选择地围绕破坏/旧的应用程序工作。它只能用着mangle表内
        --checksum-fill
            out：在POSTROUTING、OUTPUT、FORWARD链中生效
        --pol {none|ipsec}
            如果数据包受到IPSec处理，则匹配。
        --strict 
            选择是否匹配给出的精确策略，或如果给出任何规则策略，则匹配
        [!] --reqid id
        [!] --spi spi
        [!] --proto {ah|esp|ipcomp}
        [!] --mode {tunnel|transport}
        [!] --tunnel-src addr[/mask]
            匹配隧道模式SA的源端点地址。【仅和“--mode tunnel”一起有效】
        [!] --tunnel-dst addr[/mask]
            匹配隧道模式SA的目的端点地址。【仅和“--mode tunnel”一起有效】
        --next 
            开始策略规范中的下一个规则。【仅用于“--strict”选项 】

    其他模块：
             connbytes、connlimit、connmark、dccp、dscp、ecn、esp、hashlimit、helper、iprange、length、limit、mac、mark、multiport、owner、phtsdev、pkttype、policy、quota、rateest、realm、recent、sctp、set、socket、statistic、string、tcpmss、tos、ttl、u32、udp、unclean

***************************************************************************

TARGET EXTENSIONS【目标扩展】
    iptables可扩展目标模块：以下以纳入在标准分布

    AUDIT
        此目标允许创建用于命中目标的包的审计记录。它可以用来记录接收、删除和拒绝包。详情请参阅auditd(8)。
        --type {accept|drop|reject}  设置审计记录类型
        Example:
            iptables -N AUDIT_DROP
            iptables -A AUDIT_DROP -j AUDIT --type drop
            iptables -A AUDIT_DROP -j DROP

    CHECKSUM
        这个目标允许有选择地围绕破坏/旧的应用程序工作。它只能用着mangle表内
        --checksum-fill
            out：在POSTROUTING、OUTPUT、FORWARD链中生效
        --pol {none|ipsec}
            如果数据包受到IPSec处理，则匹配。
        --strict 
            选择是否匹配给出的精确策略，或如果给出任何规则策略，则匹配
        [!] --reqid id
        [!] --spi spi
        [!] --proto {ah|esp|ipcomp}
        [!] --mode {tunnel|transport}
        [!] --tunnel-src addr[/mask]
            匹配隧道模式SA的源端点地址。【仅和“--mode tunnel”一起有效】
        [!] --tunnel-dst addr[/mask]
            匹配隧道模式SA的目的端点地址。【仅和“--mode tunnel”一起有效】
        --next 
            开始策略规范中的下一个规则。【仅用于“--strict”选项 】

    其他模块：
             connbytes、connlimit、connmark、dccp、dscp、ecn、esp、hashlimit、helper、iprange、length、limit、mac、mark、multiport、owner、phtsdev、pkttype、policy、quota、rateest、realm、recent、sctp、set、socket、statistic、string、tcpmss、tos、ttl、u32、udp、unclean

***************************************************************************

TARGET EXTENSIONS【目标扩展】
            icmp-admin-prohibited(*)
        返回适当的错误信息，tcp-reset选项仅用于与tcp协议相匹配的规则中：这会导致发送回TCP RST包。这对于阻塞ident(113 / tcp)探测非常有用，因为在发送邮件给破碎的邮件主机时经常会发生这样的问题(否则无法接受您的邮件)。
        (*)用icmp-admin-prohibited在不支持它的内核上，将导致一个简单的DROP替代REJECT
        
    SNAT [禁止nat表、POSTROUTING链生效]
        该目标仅在nat表、POSTROUTING链中有效，它指定的包的源地址会被修改（将来这条连接的所有包会被标记），规则应停止审查。这需要一种选择：
        --to-source ipaddr[-ipaddr][:port[-port]]
        --random
        --persistent
    
    MARK 【用于mangle表】
        --set-xmark value[/mask]
        --set-mark value[/mask]
        The following mnemonics are available:
        --and-mark bits
        --or-mark bits
        --xor-mark bits

    MASQUERADE 【仅在 nat表、POSTROUTING链中生效】
        --to-ports port[-port] 默认SNAT链  【和“-p tcp 或  -p udp”有效】
        --random 

    MIRROR 【在INPUT、FORWARD、PREROUTING链有效】
    NETMAP 【用于 nat 表】
        --to address[/mask]
    NOTRAC 【用于 raw表有效】
    REDIRECT 【用于nat表、PREROUTING、OUTPUT、用户自定义链】
        --to-ports port[-port] 【和“-p tcp 或  -p udp”有效】
        --random 端口将随机映射
    REJECT 【在INPUT、FORWARD、OUTPUT、用户自定义链生效】
        --reject-with type
            type：
            icmp-net-unreachable
            icmp-host-unreachable
            icmp-port-unreachable 【default】
            icmp-proto-unreachable
            icmp-net-prohibited
            icmp-host-prohibited
            icmp-admin-prohibited (*)
        这些类型是返回适当的ICMP错误信息。
        tcp-reset选项可用于仅匹配tcp协议的规则，会生成一个”TCP RST“包返回
        (*) 对不支持它的内核使用“icmp-admin-prohibited”“将导致一个简单的DROP而不是REJECT
              
    SNAT 【在 nat表、POSTROUTING链生效】
        --to-source ipaddr[-ipaddr][:port[-port]] 可随意指定一个新IP、IP群、port群 【和“-p tcp 或  -p udp”有效】
        --random
        --persistent 给每个连接的客户端相同的src/dst ip
              
              
              
注：
    mac：PREROUTING、FORWARD、INPUT
    owner：在OUTPUT、POSTROUTING 
    ECN：仅用于mangle表中
              
              
       DSCP、ECN、mark、MASQUERADE、MIRROR、NETMAP、NFLOG、NFQUEUE、NOTRACK、RATEEST、REDIRECT、SAME、SECMARK、SET、TCPMSS、TCPOPTSTRIP、TOS、TPROXY、TRACE、TTL、ULOG、physdev
                   
                   
配置文件：
    默认防火墙的规则保存在/etc/sysconfig/iptables 或/etc/sysconfig/ip6tables中
                            
注：
    在linux启动时，iptables服务运行在任何DNS相关服务之前，这就意味着防火墙规则只能引用数字型的IP，规则中的域名会产生错误。
                            
                            
                            
                            
                            
                            
                            
                            
                            
                            

                    

                      ##########################################
                      #              CENTOS 7                  #
                      ##########################################
            
内建表：
    filter、nat、mangle、raw、security

表内链:
    filter:
        INPUT、FORWARD、OUTPUT
    nat:
        PREROUTING、OUTPUT、POSTROUTING
    mangle：
        PREROUTING、INPUT、FORWARD、OUTPUT、POSTROUTING
    raw：
        PREROUTING、OUTPUT
    security：
        INPUT、FORWARD、OUTPUT


流向：
          




基本动作Target
-j ACCEPT               接受                filter
-j REJECT               拒绝                filter
-j DROP                 丢弃                filter
-j LOG                   记录日志       filter
-j SNAT                 源地址转换  nat
-j MASQUERADE     伪装              nat     
-j DNAT                 目标地址转换    nat     目标地址及端口映射（转换）
-j REDIRECT           端口转换       nat     本地端口转换（本机）
-j MARK                  标记               mangle
            
            
            
            
            
            
            
            
            
            
