mysql引擎：
	5种：ISAM、MYISAM、HEAP、INNODB、BERKLEY(BDB)
	
	ISAM：
		优点：读取速度快、不占用大量的内存和存储资源
		缺点：不支持事务处理，不容错
		
	MYISAM：是MYSQL的ISAM扩展格式和缺省的数据库引擎（5.5版本之前）
			1、提供ISAM没有的索引和字段管理功能
			2、MYISAM还使用一种表格锁定的机制，来优化多个并发的读写操作
			3、支持大文件，通常最高256T
			4、适合读多写少的应用场景
			5、每个MYISAM表的最大索引数是64，可以通过编译改变
			6、BLOB和TEXT类型可以被索引
			7、支持全文索引
			8、仅支持表锁
			9、非事务性引擎
			10、.frm 文件存储定义、MYD数据文件、MYI引索文件
		
		
	HEAP:【也称为MEMORY引擎】
	允许只驻留在内存里的临时表格。驻留在内存里让HEAP要比ISAM和MYISAM都快，但是它所管理的数据是不稳定的，而且如果在关机之前没有进行保存，那么所有的数据都会丢失。在数据行被删除的时候，HEAP也不会浪费大量的空间。HEAP表格在你需要使用SELECT表达式来选择和操控数据的时候非常有用。要记住，在用完表格之后就删除表格。
	MEMORY：将数据存储到内存中的存储引擎
			特点：快！但是不支持BLOB和TEXT列
			非物质引擎，无法持续存储
		
	INNODB:目前MYSQL的默认存储引擎
			
			1、事务性引擎，支持行锁和外建，为巨大数据量的最大性能设计
			2、.DBdata1自动扩展数据文件，IB_logf列rle
		
		
	BERKLEY(BDB):
		优点：
		缺点：
	


	NDB：用于MYSQL CLUSTER的集群存储引擎
			提供数据层面上的高可用性，例如多表查询等复杂性查询性能相对不是优势，尚在不断完善中

Innodb引擎
　　Innodb引擎提供了对数据库ACID事务的支持，并且实现了SQL标准的四种隔离级别，关于数据库事务与其隔离级别的内容请见数据库事务与其隔离级别这篇文章。该引擎还提供了行级锁和外键约束，它的设计目标是处理大容量数据库系统，它本身其实就是基于MySQL后台的完整数据库系统，MySQL运行时Innodb会在内存中建立缓冲池，用于缓冲数据和索引。但是该引擎不支持FULLTEXT类型的索引，而且它没有保存表的行数，当SELECT COUNT(*) FROM TABLE时需要扫描全表。当需要使用数据库事务时，该引擎当然是首选。由于锁的粒度更小，写操作不会锁定全表，所以在并发较高时，使用Innodb引擎会提升效率。但是使用行级锁也不是绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表。

名词解析：

ACID

A  事务的原子性(Atomicity)：指一个事务要么全部执行,要么不执行.也就是说一个事务不可能只执行了一半就停止了.比如你从取款机取钱,这个事务可以分成两个步骤:1划卡,2出钱.不可能划了卡,而钱却没出来.这两步必须同时完成.要么就不完成.
C 事务的一致性(Consistency)：指事务的运行并不改变数据库中数据的一致性.例如,完整性约束了a+b=10,一个事务改变了a,那么b也应该随之改变.
I 独立性(Isolation）:事务的独立性也有称作隔离性,是指两个以上的事务不会出现交错执行的状态.因为这样可能会导致数据不一致.
D 持久性(Durability）:事务的持久性是指事务执行成功以后,该事务所对数据库所作的更改便是持久的保存在数据库之中，不会无缘无故的回滚.

MyIASM引擎
　　MyIASM是MySQL默认的引擎，但是它没有提供对数据库事务的支持，也不支持行级锁和外键，因此当INSERT(插入)或UPDATE(更新)数据时即写操作需要锁定整个表，效率便会低一些。不过和Innodb不同，MyIASM中存储了表的行数，于是SELECT COUNT(*) FROM TABLE时只需要直接读取已经保存好的值而不需要进行全表扫描。如果表的读操作远远多于写操作且不需要数据库事务的支持，那么MyIASM也是很好的选择。

