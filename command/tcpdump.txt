tcpdump使用：

SYNOPSIS
       tcpdump [ -AdDefIKlLnNOpqRStuUvxX ] [ -B buffer_size ] [ -c count ]
               [ -C file_size ] [ -G rotate_seconds ] [ -F file ]
               [ -i interface ] [ -m module ] [ -M secret ]
               [ -r file ] [ -s snaplen ] [ -T type ] [ -w file ]
               [ -W filecount ]
               [ -E spi@ipaddr algo:secret,...  ]
               [ -y datalinktype ] [ -z postrotate-command ] [ -Z user ]
               [ expression ]

          -n/-vvv/-X/-i...     src/dst...
            ^                     ^
            |                     |
tcpdump  [option]  [not]  proto  dir  type
                           |            |
                           V            V
			tcp/udp/icmp/ip/arp...    host/net/port/portrange

tcpdump条件表达式
    三种不同类型修饰符：
        type：[默认host]
            host、
            net、
            port、
            portrange
        dir：[默认src or dst]
            src、
            dst、
            src or dst、
            src and dst
        proto：[默认ip or arp or rarp]
            ip、ipv6：ipv4和ipv6
            arp、rarp：地址解析协议和反地址解析协议
            tcp：tcp协议
            udp：udp协议

            ether、fddi：fddi(nt: Fiber Distributed Data Interface)是在FDDI(分布式光纤数据接口网络)上的特定的网络协议，'fddi' 实际上与'ether' 含义一样: tcpdump 会把他们当作一种“指定网络接口上的数据链路层协议”. 如同ehter网(以太网), FDDI 的头部通常也会有源, 目的, 以及包类型, 从而可以像ether网数据包一样对这些域进行过滤. 此外, FDDI 头部还有其他的域, 但不能被放到表达式中用来过滤
            tr
            wlan：无线局域网
            decnet
    其它类型的：
        gateway
        broadcast
        less
        greater
        

参数说明如下：

    -a：将网络地址和广播地址转变成名字；
    -A：以 ASCII 显示数据包（不包括链路层头部信息）；
    -b：在数据-链路层上选择协议，包括ip、arp、rarp、ipx都是这一层的。tcpdump -b arp 将只显示网络中的arp即地址转换协议信息；
    -B：Set the operating system capture buffer size to buffer_size
    -c：在收到指定数目的包后，tcpdump就会停止；
    -C：
    -d：将匹配信息包的代码以人们能够理解的汇编格式给出；
    -dd：将匹配信息包的代码以c语言程序段的格式给出；
    -ddd：将匹配信息包的代码以十进制的形式给出；
    -D：打印当前可用于 tcpdump 监听的网卡；
    -e：在输出行打印出数据链路层的头部信息；（比如 MAC 地址信息）
    -E：
    -f：将外部的Internet地址以数字的形式打印出来；
    -F：从指定的文件中读取表达式,忽略其它的表达式；
    -G：
    -i：指定监听的网络接口，如果要监听所有网卡，可以使用 any；
    -I：
    -K：
    -l：使标准输出变为缓冲行形式,如tcpdump -l >tcpcap.txt将得到的数据存入tcpcap.txt文件中；[打印时使用行缓冲，这在使用管道时非常方便；]
    -L：
    -m：
    -M：
    -n：不进行IP地址到主机名的转换，而是显示 IP 地址；
    -nn：不进行IP和端口名称的转换；[数字显示]
    -nnn：使用-nnn参数禁用tcpdump展示时把IP、端口等转换为域名、端口对应的知名服务名称。
    -N：不打印出默认的域名
    -O：不进行匹配代码的优化，当怀疑某些bug是由优化代码引起的, 此选项将很有用；
    -p：定要抓取的包是流入还是流出的包。可以给定的值为"in"、"out"和"inout"，默认为"inout"
    -q：显示更少的协议信息；
    -r：从指定的文件中读取包(这些包一般通过-w选项产生)；
    -R：
    -s：抓取数据包时默认抓取长度为68字节。加上 -s 0 后可以抓到完整的数据包。len：设置tcpdump的数据包抓取长度为len，如果不设置默认将会是65535字节。对于要抓取的数据包较大时，长度设置不够可能会产生包截断，若出现包截断，
      ：输出行中会出现"[|proto]"的标志(proto实际会显示为协议名)。但是抓取len越长，包的处理时间越长，并且会减少tcpdump可缓存的数据包的数量，
      ：从而会导致数据包的丢失，所以在能抓取我们想要的包的前提下，抓取长度越小越好。
    -S：打印绝对序列号而不是相对序列号（TCP）；
    -t：不显示任何时间戳；
    -tt：显示自 1970-01-01 00:00:00 UTC 起的秒数；
    -ttt：显示两个数据包之间的时间差（微秒）；
    -tttt：显示年月日、时分秒；
    -ttttt：显示相对第一个数据包的时间差（微秒）；
    -T：将监听到的包直接解释为指定的类型的报文，常见的类型有rpc(远程过程调用)和snmp；
    -u：
    -U：
    -v：详细输出，如 TTL、总长度、IP 包选项、IP/ICMP 报头校验和、使用 -w 写入文件时每隔 10 秒显示捕获的数据包数量等；
    -vv：更详细的输出，如打印 NFS 附加字段、完全解码 SMB 数据包等；
    -vvv：更详细的输出，如打印 telnet SB … SE 选项、以 16 进制打印 telnet 选项等；
    -w：直接将包写入文件中，并不分析和打印出来，一般保存在后缀为pcap的文件中；
    -W：
    -x：
    -xx：
    -X：以 ASCII 和 Hex 显示数据包（不包括链路层头部信息）；
    -XX：以 ASCII 和 Hex 显示数据包（包括链路层头部信息）；
    -y：
    -z：
    -Z：













    
        tcp 标志位：
            SYN，显示为S，同步标志位，用于建立会话连接，同步序列号；
            ACK，显示为.，确认标志位，对已接收的数据包进行确认；
            FIN，显示为F，完成标志位，表示我已经没有数据要发送了，即将关闭连接；
            RESET，显示为R，重置标志位，用于连接复位、拒绝错误和非法的数据包；
            PUSH，显示为P，推送标志位，表示该数据包被对方接收后应立即交给上层应用，而不在缓冲区排队；
            URGENT，显示为U，紧急标志位，表示数据包的紧急指针域有效，用来保证连接不被阻断，并督促中间设备尽快处理；
		[S]：SYN（开始连接）
		[.]：没有FLAG
		[P]：PSH（推送数据）
		[F]：FIN（结束连接）
		[R]：RST（重置连接）
		[s.]：SYN-ACK，就是SYN报文的应答报文